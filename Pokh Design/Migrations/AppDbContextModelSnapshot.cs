// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pokh_Design.Models;

namespace Pokh_Design.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Pokh_Design.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Chair",
                            Description = "All-Hand Made Chairs"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Pouf",
                            Description = "Elegant Leather Piece"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "ArmChair",
                            Description = "Get the comfort that you deserve"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Lamp",
                            Description = "Smart lamp with the best design ever"
                        });
                });

            modelBuilder.Entity("Pokh_Design.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ImageThumbnailUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InStock")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProductOfTheWeek")
                        .HasColumnType("bit");

                    b.Property<string>("LongDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            ImageThumbnailUrl = "https://www.facebook.com/pokhdesign/photos/a.865754870199372/3486078438166989/",
                            ImageUrl = "/images/OldChair.jpg",
                            InStock = true,
                            IsProductOfTheWeek = true,
                            LongDescription = "An old chair refurbished. supple sheepskin with primitive fish motifs.",
                            Name = "Old Chair refurbished",
                            Price = 3450m,
                            ShortDescription = "Lorem Ipsum"
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 1,
                            ImageThumbnailUrl = "https://www.facebook.com/pokhdesign/photos/a.865754870199372/2359173760857468/",
                            ImageUrl = "/images/HandPaintedChair.jpg",
                            InStock = true,
                            IsProductOfTheWeek = true,
                            LongDescription = "Hand painted #orginal #art",
                            Name = "Hand painted Chair",
                            Price = 4999m,
                            ShortDescription = "Lorem Ipsum"
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 2,
                            ImageThumbnailUrl = "https://www.facebook.com/pokhdesign/photos/a.866175150157344/1214016528706536/",
                            ImageUrl = "/images/RoundPouf.jpg",
                            InStock = true,
                            IsProductOfTheWeek = true,
                            LongDescription = "Round pouf Manufacture of vegetal leather, painted and painted by hand Dimensions: 35 × 65 × 65 Removable cover.",
                            Name = "Round Pouf",
                            Price = 500m,
                            ShortDescription = "Lorem Ipsum"
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 3,
                            ImageThumbnailUrl = "https://www.facebook.com/pokhdesign/photos/a.865753123532880/865753080199551/",
                            ImageUrl = "/images/BigArm.jpg",
                            InStock = true,
                            IsProductOfTheWeek = false,
                            LongDescription = "Made by humans in Tunisian fabric",
                            Name = "Arm Chair",
                            Price = 3450m,
                            ShortDescription = "Lorem Ipsum"
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 3,
                            ImageThumbnailUrl = "https://www.facebook.com/pokhdesign/photos/a.865753123532880/865753080199551/",
                            ImageUrl = "/images/blueChair.jpg",
                            InStock = true,
                            IsProductOfTheWeek = false,
                            LongDescription = "Made by humans in Tunisian fabric",
                            Name = "Blue Chair",
                            Price = 3450m,
                            ShortDescription = "Lorem Ipsum"
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 3,
                            ImageThumbnailUrl = "https://www.facebook.com/pokhdesign/photos/a.865753123532880/865753080199551/",
                            ImageUrl = "/images/YellowChair.jpg",
                            InStock = true,
                            IsProductOfTheWeek = false,
                            LongDescription = "Made by humans in Tunisian fabric",
                            Name = "Yellow Chair",
                            Price = 3450m,
                            ShortDescription = "Lorem Ipsum"
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryId = 3,
                            ImageThumbnailUrl = "https://www.facebook.com/pokhdesign/photos/a.865753123532880/865753080199551/",
                            ImageUrl = "/images/GreenChair.jpg",
                            InStock = true,
                            IsProductOfTheWeek = false,
                            LongDescription = "Made by humans in Tunisian fabric",
                            Name = "Green  Chair",
                            Price = 3450m,
                            ShortDescription = "Lorem Ipsum"
                        },
                        new
                        {
                            ProductId = 8,
                            CategoryId = 3,
                            ImageThumbnailUrl = "https://www.facebook.com/pokhdesign/photos/a.865753123532880/865753080199551/",
                            ImageUrl = "/images/BigArmAndPouf.jpg",
                            InStock = true,
                            IsProductOfTheWeek = true,
                            LongDescription = "Made by humans in Tunisian fabric",
                            Name = "Big Chair and Pouf",
                            Price = 3450m,
                            ShortDescription = "Lorem Ipsum"
                        },
                        new
                        {
                            ProductId = 9,
                            CategoryId = 4,
                            ImageThumbnailUrl = "https://www.facebook.com/pokhdesign/photos/a.865753123532880/865753080199551/",
                            ImageUrl = "/images/lamp.png",
                            InStock = true,
                            IsProductOfTheWeek = true,
                            LongDescription = "Those lamps Made by humans in Tunisian fabric",
                            Name = "lamp",
                            Price = 1500m,
                            ShortDescription = "Lorem Ipsum"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pokh_Design.Models.Product", b =>
                {
                    b.HasOne("Pokh_Design.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Pokh_Design.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
